%macro pushaq 0
push rax
push rbx
push rcx
push rdx
push rsi
push rdi
push r8
push r9
push r10
push r11
push r12
push r13
push r14
push r15
%endmacro
%macro popaq 0
pop r15
pop r14
pop r13
pop r12
pop r11
pop r10
pop r9
pop r8
pop rdi
pop rsi
pop rdx
pop rcx
pop rbx
pop rax
%endmacro
section .bss
safe_stack_bottom:
resb 1024 
safe_stack_top:
section .data
exceptionmsg:
dw __?utf16?__('exception 0x%x'), 10, 0
ripmsg:
dw __?utf16?__('rip: %p'), 10, 0
rspmsg:
dw __?utf16?__('rsp: %p'), 10, 0
rbpmsg:
dw __?utf16?__('rbp: %p'), 10, 0
old_stack:
dq 0
section .text
global default_isr
global isr0
extern print
extern printf
extern clear
extern set_text_color
exception_fg:
db 255, 255, 255
exception_bg:
db 0, 0, 0
deadly_exception:
pushaq
mov rcx, exception_fg
mov rdx, exception_bg
sub rsp, 32
call set_text_color
call clear
mov rcx, ripmsg
mov rdx, [old_stack]
mov qword [rsp], rcx
mov qword [rsp+8], rdx
call printf
popaq
hlt
ret
default_isr:
sti
iretq
isr0:
cli
push rax
mov rax, [rsp+32]
mov [old_stack], rax
pop rax
mov rsp, safe_stack_top-8
push qword 0
call deadly_exception
hlt
iretq
